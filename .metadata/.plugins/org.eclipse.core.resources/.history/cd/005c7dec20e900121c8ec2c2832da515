package com.raymondlusida.birthdaygirl.controller;

import com.badlogic.gdx.math.Vector2;
import com.raymondlusida.birthdaygirl.model.Girl;
import com.raymondlusida.birthdaygirl.model.Girl.Direction;
import com.raymondlusida.birthdaygirl.model.Room;

public class RoomController {

	private Room room;
	private Girl girl;
	
	private float accumulatedDelta;
	private int directionCounter = 0;
	
	private Vector2 goal;
	
	public RoomController(Room room) {
		this.room = room;
		this.girl = room.getGirl();
		this.accumulatedDelta = 0;
		this.goal = new Vector2(girl.getPosition().x, girl.getPosition().y);
	}
	
	public void update(float delta) {
		goTo(goal);
		girl.update(delta);
	}

	/*private void process(float delta) {
		accumulatedDelta += delta;
		if(accumulatedDelta >= 1) {			
			if(directionCounter == 0) {
				girl.move(Direction.DOWN);
			} else if(directionCounter == 1) {
				girl.move(Direction.LEFT);
			} else if(directionCounter == 2) {
				girl.move(Direction.UP);
			} else if(directionCounter == 3) {
				girl.move(Direction.RIGHT);
			}

			System.out.println(girl.getDirection());
			accumulatedDelta = 0;
			directionCounter = (directionCounter + 1) % 4;
			
		}
	}*/
	
	public void moveGirl() {
		float deltaX = goal.x - girl.getPosition().x;
		float deltaY = goal.y - girl.getPosition().y;
		System.out.println(Math.abs(deltaX));
		if(Math.abs(deltaX) > 0.1) {
			if(deltaX > 0)
				girl.move(Direction.RIGHT);
			else
				girl.move(Direction.LEFT);
		}
		

	}
}
