package com.raymondlusida.birthdaygirl.inputprocessor;

import com.badlogic.gdx.InputProcessor;
import com.badlogic.gdx.math.Vector2;
import com.raymondlusida.birthdaygirl.controller.GirlController;
import com.raymondlusida.birthdaygirl.model.Gift;
import com.raymondlusida.birthdaygirl.model.World;
import com.raymondlusida.birthdaygirl.renderer.WorldRenderer;
import com.raymondlusida.birthdaygirl.screen.GameScreen;

public class GameMainProcessor implements InputProcessor {

	private World world;
	private WorldRenderer renderer;
	private GirlController controller;
	
	public GameMainProcessor(GameScreen screen) {
		world = screen.world;
		renderer = screen.renderer;
		controller = screen.controller;
	}
	
/** Input Processor Methods **/
	
	@Override
	public boolean keyDown(int keycode) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean keyUp(int keycode) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean keyTyped(char character) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean touchDown(int screenX, int screenY, int pointer, int button) {
		float x = (float)screenX / ippuX;
		float y = World.ROOM_HEIGHT - (float)screenY / ippuY;
		
		if(y > 0) {
		//	controller.setGoal(new Vector2(x, y));
		} else {
			Gift holdOption = renderer.touchOption(new Vector2(x, y));
			System.out.println(holdOption);
			if(holdOption != null)
				holdOption.setPosition(new Vector2(x, y));
			renderer.setHoldOption(holdOption);
		}
		
		return true;
	}

	@Override
	public boolean touchUp(int screenX, int screenY, int pointer, int button) {
		float x = (float)screenX / ippuX;
		float y = World.ROOM_HEIGHT - (float)screenY / ippuY;
		
		if(renderer.getHoldOption() != null && y > 0  && y < World.ROOM_HEIGHT && x > 0 && x < World.ROOM_WIDTH) {
			renderer.moveHoldOption(new Vector2(x, y));
			controller.addGift(renderer.getHoldOption().copy());
		}
		
		renderer.setHoldOption(null);
		
		return true;
	}

	@Override
	public boolean touchDragged(int screenX, int screenY, int pointer) {
		float x = (float)screenX / ippuX;
		float y = World.ROOM_HEIGHT - (float)screenY / ippuY;
		renderer.moveHoldOption(new Vector2(x, y));
		return true;
	}

	@Override
	public boolean mouseMoved(int screenX, int screenY) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean scrolled(int amount) {
		// TODO Auto-generated method stub
		return false;
	}
}
